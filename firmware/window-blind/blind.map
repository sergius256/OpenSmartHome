Archive member included to satisfy reference by file (symbol)

/usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
                              /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
                              blind.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

MovementTimeCurrent
                    0x4               blind.o
MovementTimeFull    0x4               blind.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
LOAD blind.o
START GROUP
LOAD /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a
LOAD /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x17a
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x10 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000084        0x8 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000008c        0x4 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x000000000000008c                __vector_22
                0x000000000000008c                __vector_1
                0x000000000000008c                __vector_24
                0x000000000000008c                __vector_12
                0x000000000000008c                __bad_interrupt
                0x000000000000008c                __vector_6
                0x000000000000008c                __vector_3
                0x000000000000008c                __vector_23
                0x000000000000008c                __vector_25
                0x000000000000008c                __vector_11
                0x000000000000008c                __vector_13
                0x000000000000008c                __vector_17
                0x000000000000008c                __vector_19
                0x000000000000008c                __vector_7
                0x000000000000008c                __vector_5
                0x000000000000008c                __vector_4
                0x000000000000008c                __vector_9
                0x000000000000008c                __vector_2
                0x000000000000008c                __vector_21
                0x000000000000008c                __vector_15
                0x000000000000008c                __vector_8
                0x000000000000008c                __vector_10
                0x000000000000008c                __vector_16
                0x000000000000008c                __vector_18
                0x000000000000008c                __vector_20
 .text          0x0000000000000090       0x6a blind.o
                0x0000000000000090                __vector_14
 .text          0x00000000000000fa        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000000fa        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000fa                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000000fa       0x7c blind.o
                0x00000000000000fa                main
 .text.libgcc.mul
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000176                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000176        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
                0x0000000000000176                exit
                0x0000000000000176                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000176        0x4 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000017a                _etext = .

.data           0x0000000000800100        0x0 load address 0x000000000000017a
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x0 blind.o
 .data          0x0000000000800100        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100        0xf
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x0000000000800100        0x7 blind.o
                0x0000000000800100                DesiredPosition
                0x0000000000800101                CurrentPosition
                0x0000000000800102                FSM_State
 .bss           0x0000000000800107        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800107        0x0 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800107        0x8 blind.o
                0x0000000000800107                MovementTimeCurrent
                0x000000000080010b                MovementTimeFull
                0x000000000080010f                PROVIDE (__bss_end, .)
                0x000000000000017a                __data_load_start = LOADADDR (.data)
                0x000000000000017a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010f        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080010f                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 blind.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x68
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 blind.o
 .debug_aranges
                0x0000000000000028       0x20 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000048       0x20 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x83d
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_info    0x00000000000005f4      0x13b blind.o
 .debug_info    0x000000000000072f       0x87 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .debug_info    0x00000000000007b6       0x87 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0x67b
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_abbrev  0x00000000000005a2       0xb1 blind.o
 .debug_abbrev  0x0000000000000653       0x14 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000667       0x14 /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000      0x24e
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_line    0x000000000000001d      0x137 blind.o
 .debug_line    0x0000000000000154       0x6b /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .debug_line    0x00000000000001bf       0x8f /usr/lib64/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x0000000000000000       0x54
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x54 blind.o

.debug_str      0x0000000000000000      0x32d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib64/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_str     0x0000000000000208      0x125 blind.o
                                        0x159 (size before relaxing)

.debug_loc      0x0000000000000000       0x1e
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x1e blind.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 blind.o

.debug_macro
 *(.debug_macro)
OUTPUT(blind.elf elf32-avr)
LOAD linker stubs
